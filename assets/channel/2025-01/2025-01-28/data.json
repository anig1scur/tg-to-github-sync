[{"id":624,"created_at":"2025-01-28 01:58:47","date":"2025-01-28","text":"excellent explanation of **backtracking**:\n\n>When we design new recursive backtracking algorithms, we must figure out in advance what information we will need about past decisions in the middle of the algorithm. If this information is nontrivial, our recursive algorithm might need to solve a more general problem than the one we were originally asked to solve. (We’ve seen this kind of generalization before: To find the median of an unsorted array in linear time, we derived an algorithm to select the kth smallest\nelement for arbitrary k.)\n\n>Finally, once we’ve figured out what recursive problem we really need to solve, we solve that problem by recursive brute force: Try all possibilities for the next decision that are consistent with past decisions, and let the Recursion Fairy worry about the rest. No being clever here. No skipping “obviously” stupid choices. Try everything. You can make the algorithm faster later.","photos":[],"tags":["algorithm"],"quoted_message":null,"forwarded_info":null}]